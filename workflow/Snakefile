from os.path import join

include: join("rules/init.smk")
include: join("rules/trim.smk")
include: join("rules/align.smk")
include: join("rules/qc.smk")

localrules: all

rule all:
    input:
        ## cutadapt
        # cutadapt files are now temp() to save space
        expand(join(RESULTSDIR,"{sample}","trim","{sample}.R1.trim.fastq.gz"),sample=SAMPLES),
        expand(join(RESULTSDIR,"{sample}","trim","{sample}.R2.trim.fastq.gz"),sample=SAMPLES),
        ## fastqc
        expand(join(QCDIR,"fastqc","{sample}.R1_fastqc.zip"), sample=SAMPLES),
        expand(join(QCDIR,"fastqc","{sample}.R2_fastqc.zip"), sample=SAMPLES),
        expand(join(QCDIR,"fastqc","{sample}.R1.trim_fastqc.zip"), sample=SAMPLES),
        expand(join(QCDIR,"fastqc","{sample}.R2.trim_fastqc.zip"), sample=SAMPLES),
        ## fastq_screen
        expand(join(QCDIR,"FQscreen","{sample}.R1.trim_screen.txt"), sample=SAMPLES),
        expand(join(QCDIR,"FQscreen","{sample}.R1.trim_screen.png"), sample=SAMPLES),
        expand(join(QCDIR,"FQscreen","{sample}.R2.trim_screen.txt"), sample=SAMPLES),
        expand(join(QCDIR,"FQscreen","{sample}.R2.trim_screen.png"), sample=SAMPLES),
        ## star1p
        expand(join(RESULTSDIR,"{sample}","STAR1p","withoutChimericJunctions","{sample}_p1.Chimeric.out.junction"),sample=SAMPLES),
        expand(join(RESULTSDIR,"{sample}","STAR1p","withChimericJunctions","{sample}_p1.Aligned.sortedByCoord.out.bam"),sample=SAMPLES),
        expand(join(RESULTSDIR,"{sample}","STAR1p","withChimericJunctions","{sample}_p1.Aligned.sortedByCoord.out.bam.bai"),sample=SAMPLES),
        ## f and r bigwigs
        expand(join(RESULTSDIR,"{sample}","STAR1p","withChimericJunctions","{sample}.fwd.bw"),sample=SAMPLES),
        expand(join(RESULTSDIR,"{sample}","STAR1p","withChimericJunctions","{sample}.rev.bw"),sample=SAMPLES),
        ## multiqc
        join(RESULTSDIR,"QC","multiqc_report.html"),
